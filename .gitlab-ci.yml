stages:
    - EA-initialization
    - synthesis
    - implementation
    - bitstream
variables:
        GIT_SUBMODULE_STRATEGY: recursive   
        EMULATED_ACCELERATOR_REPO: https://gitlab-ci-token:$RTL_REPO_TOKEN@gitlab.bsc.es/meep/rtl_designs/meep_dvino.git
        EMULATED_ACCELERATOR_SHA: 5476d2528d1c37521b80c018f3197f96c5b75fb8
        VIVADO_VERSION: "2020.1"
        VIVADO_PATH: '/opt/Xilinx/Vivado/${VIVADO_VERSION}/settings64.sh'
        THIS_REPO: "FPGA_implementations%2FAlveoU280%2Ffpga_shell"
        LAST_BINARIES_JOB: "219823"
        NUMBER_OF_JOBS: "8"
        ARTIFACTS: gitlab-ci-token:$MEEP_ARTIFACT_TOKEN
        
before_script:
            - source $VIVADO_PATH        

download-binaries:
        stage: EA-initialization
        rules:
            # The default is download the binaries from a successful job
            - if: '$CI_PIPELINE_SOURCE == "push"'
              when: on_success
            - when: never
        tags:
            - MEEP_FPGA     
        
        script:
            - echo "$ARTIFACTS, $THIS_REPO, $LAST_BINARIES_JOB"
            - source sh/get_artifacts.sh $THIS_REPO $LAST_BINARIES_JOB $ARTIFACTS
            - unzip download.zip -d .
            
        artifacts:
                #  untracked: true
            expire_in: 1 day
            paths:            
                - binaries 
EA-init:
        stage: EA-initialization
        rules:
            - if: '$CI_PIPELINE_SOURCE == "merge_request_event"' 
            #- if: '$CI_PIPELINE_SOURCE == "push"'
              when: on_success
        timeout: 2h
        tags: 
            - MEEP_FPGA
        script:
            - init_project $EMULATED_ACCELERATOR_REPO $EMULATED_ACCELERATOR_SHA
            - make binaries          
        #after_script:
            #- cp -r accelerator/meep_shell/binaries/* binaries
        artifacts:
                #  untracked: true
          expire_in: 1 month
          paths:            
            - binaries        

init-vivado:
        stage: synthesis
        timeout: 2h
        tags: 
            - MEEP_FPGA       
        script:
            - source init_project.sh $EMULATED_ACCELERATOR_REPO $EMULATED_ACCELERATOR_SHA
            - make synthesis
        after_script:
                - >
                 echo -e " EA URL --> $EMULATED_ACCELERATOR_REPO \r\n
                 EA SHA --> $EMULATED_ACCELERATOR_SHA \r\n
                 Vivado version --> $VIVADO_VERSION   \r\n
                 Vivado path --> $VIVADO_PATH        \r\n
                 Commit time --> $CI_COMMIT_TIMESTAMP"  >>  cicd_log.txt            
        artifacts:
          expire_in: 1 day
          paths:            
            - src/system_top.sv
            - tcl/shell_env.tcl
            - gen_system.tcl
            - dcp/synthesis.dcp
          reports:
            dotenv: project.env
                - cicd_log.txt
            
implementation:
        stage: implementation
        timeout: 4h
        tags: 
            - MEEP_FPGA          
        script:
            - echo -e "set g_number_of_jobs $NUMBER_OF_JOBS" >> tcl/environment.tcl
            - make implementation        
        artifacts:
            when: on_success
            expire_in: 1 day
            paths:
                - reports
                - dcp/implementation.dcp               
bitstream:
        stage: bitstream     
        tags: 
            - MEEP_FPGA             
        script:
            - echo "Checking implementation reports..." 
            - make bitstream
        after_script:
            - cp system.bit system_${CI_JOB_ID}.bit
        dependencies:
            - implementation
        artifacts:
            when: always
            expire_in: 1 month
            paths:
                - system_${CI_JOB_ID}.bit
job4-validation:
        stage: bitstream
        tags: 
            - MEEP_FPGA             
        script:
            - echo "Checking implementation reports..." 
            - make validation
        allow_failure: true            
        dependencies:
            - implementation

                
