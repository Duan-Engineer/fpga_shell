# Author: Daniel J.Mazure
# Date: 05.12.2021
# Description: GitLab CI configuration script.

# Tests over the FPGA set to manual temporarily until one specific machine is devoted
# to that task.
#
# The CI/CD flow generates a bitstream both for the targeted EA.


variables:
        GIT_SUBMODULE_STRATEGY: recursive
        EMULATED_ACCELERATOR_REPO: https://gitlab-ci-token:$RTL_REPO_TOKEN@gitlab.bsc.es/meep/rtl_designs/meep_dvino.git
        EMULATED_ACCELERATOR_SHA:
        NUMBER_OF_JOBS: "8"
        FPGA_LOG_FILE: fpga.log
        TOOLS_DIR: /home/fpga-runnerMEEP/tools/scripts
        QDMA_DRIVERS: /home/dmazure/git_repo/dma_ip_drivers/QDMA/linux-kernel/bin
        BITSTREAM: system_${CI_PIPELINE_ID}.bit
        DEPLOY_DIR: /home/fpga-runnerMEEP/shell_deploy

stages:
    - EA-initialization
    - synthesis
    - implementation
    - validation
    - bitstream
    - fpga-test
    - deploy

        # This job can be extended from the EA itself...        
EA-build:
        stage: EA-initialization
        rules:
            #- if: '$CI_PIPELINE_SOURCE == "merge_request_event"' 
            #  when: on_success
        timeout: 2h
        tags: 
            - MEEP_FPGA
        before_script:
            - make initialize
            - source ./sh/init_modules.sh $EMULATED_ACCELERATOR_REPO $EMULATED_ACCELERATOR_SHA            
        script:    
            - make binaries
        after_script:
            - cp -r accelerator/meep_shell/binaries/* binaries
        artifacts:
                #  untracked: true
          paths:            
            - binaries        

synthesis:
        stage: synthesis
        timeout: 4h
        tags: 
            - MEEP_FPGA
        before_script:
            - source ./sh/init_modules.sh  $EMULATED_ACCELERATOR_REPO $EMULATED_ACCELERATOR_SHA
        script:
            - make project
            - make synthesis
        after_script:
            - make clean_accelerator clean_shell
            - >
              echo -e " EA URL --> $EMULATED_ACCELERATOR_REPO \r\n
              EA SHA --> $EMULATED_ACCELERATOR_SHA \r\n
              Vivado version --> $VIVADO_VERSION   \r\n
              Vivado path --> $VIVADO_PATH        \r\n
              Commit time --> $CI_COMMIT_TIMESTAMP"  >>  cicd_log.txt                             
        artifacts:
          when: always
          paths:
            - src/system_top.sv
            - tcl/shell_env.tcl
            - gen_system.tcl 
            - dcp/synthesis.dcp
            - cicd_log.txt
            
implementation:
        stage: implementation
        timeout: 4h
        tags: 
            - MEEP_FPGA
        before_script:
            - echo -e "set g_number_of_jobs $NUMBER_OF_JOBS" >> tcl/environment.tcl
        script:
            - make implementation

        after_script:
            - make clean_synthesis

        dependencies:
            - synthesis

        artifacts:
            when: on_success
            expire_in: 1 day
            paths:
                - reports
                - dcp/implementation.dcp                
bitstream:
        stage: bitstream
        needs:
            - synthesis
            - implementation
        tags: 
            - MEEP_FPGA             
        script:
            - make bitstream
        after_script:
            - mv bitstream/system.bit bitstream/$BITSTREAM
        dependencies:
            - synthesis
            - implementation
        artifacts:
            when: always
            expire_in: 1 month
            paths:
                - bitstream
validation:
        stage: bitstream
        needs: 
            - implementation
        tags: 
            - MEEP_FPGA             
        script:
            - echo "Checking implementation reports..." 
            - make validate
        allow_failure: true            
        dependencies:
            - implementation

fpga-test:
        stage: fpga-test
        needs:
            - EA-build
            - bitstream
        retry: 2
        tags: 
            - FPGA_TEST
        before_script:
            - export PATH=$PATH:$QDMA_DRIVERS
            - sudo $TOOLS_DIR/givememyuart
        script:
            - sh/load_bitstream.sh qdma bitstream/$BITSTREAM
            - source sh/fpga_test.sh $FPGA_LOG_FILE                
            # The EA script should provide the right script and the right binary
            - source $ACC_DIR/scripts/$BOOT_SCRIPT binaries/fw_payload.bin
            - echo "Checking FPGA log ..."
            - sh/check_log.sh $FPGA_LOG_FILE
        dependencies:
            - EA-build
            - bitstream
        artifacts:
            when: always
            paths:
            - $FPGA_LOG_FILE

deploy-EA:
        stage: deploy
        tags:
            - MEEP_FPGA
        rules:
                #- if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule")
        before_script:
            - mkdir -p $DEPLOY_DIR/ariane_$CI_COMMIT_SHORT_SHA
        script:
            - date >> $DEPLOY_DIR/ariane_$CI_COMMIT_SHORT_SHA/date.txt
            - cp -r ariane/* $DEPLOY_DIR/ariane_$CI_COMMIT_SHORT_SHA
        needs:
            - synthesis
            - implementation
            - bitstream
            - fpga-test
        dependencies:
            - synthesis
            - implementation
            - bitstream
            - fpga-test



