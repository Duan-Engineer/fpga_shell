# Use this file to configure your system. You can configure your system variables,
# the tags for the runners, the specific scripts for your own EA to work, etc.
# The FPGA board is also defined here [u280, u55c]
# TODO: Do make initialize FPGA_BOARD to set up the proper board within the Shell


.setup:
  variables: 
        EMULATED_ACCELERATOR: acme 
        FPGA_BOARD: u280
        GIT_SUBMODULE_STRATEGY: recursive
        CUSTOM_MSG: ACME
        BITSTREAM: system_${CI_PIPELINE_ID}.bit
        LINUX_IMAGE: osbi.bin
        SDK_DIR: accelerator/sdk
        VALID_MSG: "Welcome to Buildroot"
        # Local workstation Setup
        NUMBER_OF_JOBS: "8"        
        TOOLS_DIR: /home/tools/fpga-tools
        DRIVERS_DIR: /home/tools/drivers
        QDMA_APPS_DIR: dma_ip_drivers/QDMA/linux-kernel/bin
        DEPLOY_DIR: /home/fpga-runnerMEEP/shell_deploy
        BOOT_SCRIPT: $TOOLS_DIR/boot_riscv/boot_acme.sh

.qdma_drivers: &qdma_drivers
        - export QDMA_APPS=$DRIVERS_DIR/`hostname`/$QDMA_APPS_DIR
        - "export PATH=$QDMA_APPS:$PATH"

.default_rules:
  variables: 
    - EANAME: !reference [.setup, variables, EMULATED_ACCELERATOR]
  rules:
   if: ($CI_COMMIT_BRANCH =~ /^support/ || $CI_COMMIT_MESSAGE =~ /^#TestCICD/)

.sdk_default:
    before_script:
      - echo "SDK before script"
    script:
      - make -C $SDK_DIR alveo.bin 
    after_script:
      - cp $SDK_DIR/osbi_alveo.bin sdk_output/$LINUX_IMAGE

.synth_default:
    after_script:
        - cp $(find . -name "make_project.log") tmp/

.default_tags:
  tags:
    - MEEP_FPGA

.fpga_test:
  tags: 
    - FPGA_TEST
    # There is a special runner to run the HW test, that targets the correct board
  before_script:
    - *qdma_drivers

  script:
    - source $BOOT_SCRIPT $LINUX_IMAGE
  after_script:
    - mkdir -p boot
    - cp $BOOT_SCRIPT boot/
    - cp $LINUX_IMAGE boot/
    # image should be a binary artifact
    - mv boot tmp/

# ACME can skip the EA-build job. 
# TODO: This might be done via rules, but be careful with the dependences
.custom_build_rules:
  extends: .disable_git